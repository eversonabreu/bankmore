// <auto-generated />
using System;
using BankMore.CurrentAccount.Infrastructure.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BankMore.CurrentAccount.Infrastructure.Database.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250627224746_CurrentAccountInitialCreate")]
    partial class CurrentAccountInitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0");

            modelBuilder.Entity("BankMore.CurrentAccount.Domain.Entities.CurrentAccount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("id");

                    b.Property<int>("IsActive")
                        .HasColumnType("INTEGER")
                        .HasColumnName("ativo");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("TEXT")
                        .HasColumnName("nome_correntista");

                    b.Property<long>("Number")
                        .HasColumnType("INTEGER")
                        .HasColumnName("numero");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("senha");

                    b.Property<string>("PersonDocumentNumber")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("TEXT")
                        .HasColumnName("cpf");

                    b.HasKey("Id");

                    b.HasIndex("Number")
                        .IsUnique()
                        .HasDatabaseName("idx_numero_conta_corrente");

                    b.ToTable("conta_corrente", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("1ec072a6-1db8-4029-8f5d-48173127276c"),
                            IsActive = 1,
                            Name = "Ana",
                            Number = 1234L,
                            Password = "81DC9BDB52D04DC20036DBD8313ED055",
                            PersonDocumentNumber = "05450395922"
                        });
                });

            modelBuilder.Entity("BankMore.CurrentAccount.Domain.Entities.Idempotence", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("id");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("chave");

                    b.Property<string>("PayloadRequisition")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("requisicao");

                    b.Property<string>("PayloadResponse")
                        .HasColumnType("text")
                        .HasColumnName("resultado");

                    b.HasKey("Id");

                    b.HasIndex("Key")
                        .IsUnique()
                        .HasDatabaseName("idx_chave_idempotencia");

                    b.ToTable("idempotencia", (string)null);
                });

            modelBuilder.Entity("BankMore.CurrentAccount.Domain.Entities.Movement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("id");

                    b.Property<Guid>("CurrentAccountId")
                        .HasColumnType("TEXT")
                        .HasColumnName("id_conta_corrente");

                    b.Property<DateTime>("MovementDate")
                        .HasColumnType("TEXT")
                        .HasColumnName("data_movimentacao");

                    b.Property<char>("MovementType")
                        .HasMaxLength(1)
                        .HasColumnType("TEXT")
                        .HasColumnName("tipo_movimentacao");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("valor");

                    b.HasKey("Id");

                    b.HasIndex("CurrentAccountId");

                    b.ToTable("movimentacao", null, t =>
                        {
                            t.HasCheckConstraint("check_constraint_tipo_movimentacao_invalido", "tipo_movimentacao IN ('C','D')");
                        });
                });

            modelBuilder.Entity("BankMore.CurrentAccount.Domain.Entities.Movement", b =>
                {
                    b.HasOne("BankMore.CurrentAccount.Domain.Entities.CurrentAccount", "CurrentAccount")
                        .WithMany("Movements")
                        .HasForeignKey("CurrentAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CurrentAccount");
                });

            modelBuilder.Entity("BankMore.CurrentAccount.Domain.Entities.CurrentAccount", b =>
                {
                    b.Navigation("Movements");
                });
#pragma warning restore 612, 618
        }
    }
}
